apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply from: rootProject.file('and_res_guard.gradle')
apply from: rootProject.file('releaseinfo.gradle')
android {

    compileSdkVersion 28
    buildToolsVersion '27.0.3'

    signingConfigs {
        release {//release版的签名配置信息
            storeFile file(rootProject.ext.signConfigs.storeFile)
            storePassword rootProject.ext.signConfigs.storePassword
            keyAlias rootProject.ext.signConfigs.keyAlias
            keyPassword rootProject.ext.signConfigs.keyPassword
        }
    }


    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a', 'x86_64'
            universalApk true
        }
    }

    defaultConfig {
        applicationId "com.gfd.video"
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        ndk {
            // Specifies the ABI configurations of your native
            // libraries Gradle should build and package with your APK.
            abiFilters 'armeabi', 'armeabi-v7a', 'x86'
        }
    }

    buildTypes {
        release {
            minifyEnabled true //混淆编译
            shrinkResources true //移除无用资源
            zipAlignEnabled true //zipalign优化
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            buildConfigField("boolean", "LOG_DEBUG", "false")//正式版不打印日志
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {//为了方便调试微信支付、登陆、分享等把deug签名配置成了Release版的签名
            signingConfig signingConfigs.release
            buildConfigField("boolean", "LOG_DEBUG", "true")
        }
    }

    //自定义输出apk名字
    applicationVariants.all {
        variant ->
            variant.outputs.all { output ->
                if (buildType.name == 'release') {
                    outputFileName = new File("app_v" + defaultConfig.versionName + "_" +
                            new Date().format("yyyy-MM-dd") + "_" +
                            buildType.name + ".apk")
                }
            }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
    implementation 'com.android.support:multidex:1.0.3'
    api project(':Common')
    if (!isMusicModule.toBoolean()) {
        api project(':Music')
    }
    if (!isUserModule.toBoolean()) {
        api project(':User')
    }
    if (!isPlayerModule.toBoolean()) {
        api project(':Player')
    }
    if (!isHomeModule.toBoolean()) {
        api project(':Home')
    }
    if (!isCrosstalkModule.toBoolean()) {
        api project(':Crosstalk')
    }
}
